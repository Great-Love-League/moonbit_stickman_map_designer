var D=Object.defineProperty;var V=(y,e,t)=>e in y?D(y,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):y[e]=t;var u=(y,e,t)=>V(y,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function t(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(s){if(s.ep)return;s.ep=!0;const o=t(s);fetch(s.href,o)}})();class O{constructor(e,t,i){this.objects=e,this.object=t,this.onUpdate=i}execute(){this.objects.push(this.object),this.onUpdate()}undo(){const e=this.objects.indexOf(this.object);e>-1&&this.objects.splice(e,1),this.onUpdate()}redo(){this.execute()}}class F{constructor(e,t,i){u(this,"index",-1);this.objects=e,this.object=t,this.onUpdate=i,this.index=e.indexOf(t)}execute(){this.index>-1&&this.objects.splice(this.index,1),this.onUpdate()}undo(){this.index>-1&&this.objects.splice(this.index,0,this.object),this.onUpdate()}redo(){this.execute()}}class k{constructor(e,t,i,s,o,r){u(this,"oldX");u(this,"oldY");u(this,"newX");u(this,"newY");this.body=e,this.onUpdate=r,this.oldX=t,this.oldY=i,this.newX=s,this.newY=o}execute(){this.body.position.x=this.newX,this.body.position.y=this.newY,this.onUpdate()}undo(){this.body.position.x=this.oldX,this.body.position.y=this.oldY,this.onUpdate()}redo(){this.execute()}}class w{constructor(e,t,i,s,o){u(this,"oldValue");u(this,"newValue");this.object=e,this.property=t,this.onUpdate=o,this.oldValue=i,this.newValue=s}execute(){this.object[this.property]=this.newValue,this.onUpdate()}undo(){this.object[this.property]=this.oldValue,this.onUpdate()}redo(){this.execute()}}class M{constructor(){u(this,"history",[]);u(this,"currentIndex",-1);u(this,"maxHistorySize",50)}canUndo(){return this.currentIndex>=0}canRedo(){return this.currentIndex<this.history.length-1}execute(e){e.execute(),this.history.splice(this.currentIndex+1),this.history.push(e),this.currentIndex++,this.history.length>this.maxHistorySize&&(this.history.shift(),this.currentIndex--)}undo(){this.canUndo()&&(this.history[this.currentIndex].undo(),this.currentIndex--)}redo(){this.canRedo()&&(this.currentIndex++,this.history[this.currentIndex].redo())}clear(){this.history=[],this.currentIndex=-1}getHistorySize(){return this.history.length}getCurrentIndex(){return this.currentIndex}}let g=20,b=0,m=0;const j=1,$="#00ff00",_={static:"#95a5a6",dynamic:"#3498db",kinematic:"#9b59b6"};function E(y){return`${y}${Date.now()}_${Math.random().toString(36).substr(2,9)}`}function v(y,e,t,i){const s=y-b,o=e-m;return{x:t/2+s*g,y:i-o*g}}function A(y,e,t,i){const s=(y-t/2)/g,o=(i-e)/g;return{x:s+b,y:o+m}}function B(y){return y*g}function S(y,e,t,i){const s=t-y,o=i-e;return Math.sqrt(s*s+o*o)}function I(y,e,t,i,s){const o=y-t,r=e-i,n=Math.cos(-s),a=Math.sin(-s);return{x:o*n-r*a,y:o*a+r*n}}function P(y,e,t,i,s){const o=Math.cos(s),r=Math.sin(s);return{x:t+y*o-e*r,y:i+y*r+e*o}}function C(y,e,t,i,s,o,r){const n=I(y,e,t,i,r),a=s/2,l=o/2;return n.x>=-a&&n.x<=a&&n.y>=-l&&n.y<=l}function Y(y,e,t,i,s){return S(y,e,t,i)<=s}function X(y,e,t,i,s,o){const r=I(y,e,i,s,o);let n=!1;for(let a=0,l=t.length-1;a<t.length;l=a++){const c=t[a].x,d=t[a].y,p=t[l].x,h=t[l].y;d>r.y!=h>r.y&&r.x<(p-c)*(r.y-d)/(h-d)+c&&(n=!n)}return n}function T(y,e){const t=new Blob([y],{type:"application/json"}),i=URL.createObjectURL(t),s=document.createElement("a");s.href=i,s.download=e,document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(i)}class R{constructor(e){u(this,"canvas");u(this,"ctx");u(this,"objects",[]);u(this,"selectedObject",null);u(this,"currentTool","select");u(this,"drawingObject",null);u(this,"polygonVertices",[]);u(this,"jointBodyA",null);u(this,"jointAnchorA",null);u(this,"isDragging",!1);u(this,"dragStartPos",null);u(this,"mousePos",{x:0,y:0});u(this,"commandHistory");u(this,"moveStartPos",null);u(this,"draggingAnchor",null);u(this,"anchorStartPos",null);u(this,"isPanning",!1);u(this,"panStartOriginX",0);u(this,"panStartOriginY",0);u(this,"panStartMouseX",0);u(this,"panStartMouseY",0);u(this,"isEditingVertices",!1);u(this,"editingBody",null);u(this,"draggedVertexIndex",-1);u(this,"vertexDragStart",null);u(this,"isPreviewMode",!1);u(this,"box2dWorld",null);u(this,"box2dBodies",new Map);u(this,"box2dJoints",new Map);u(this,"previewAnimationId",null);u(this,"previewPaused",!1);u(this,"previewOriginalState",[]);u(this,"previewPPM",20);u(this,"previewOriginOffsetX",0);u(this,"previewOriginOffsetY",0);this.canvas=document.getElementById(e),this.ctx=this.canvas.getContext("2d"),this.commandHistory=new M,this.setupEventListeners(),this.updateUndoRedoButtons(),this.render()}setupEventListeners(){document.querySelectorAll(".tool-btn").forEach(t=>{t.addEventListener("click",i=>{const s=i.currentTarget.dataset.tool;this.setTool(s)})}),this.canvas.addEventListener("mousedown",this.onMouseDown.bind(this)),this.canvas.addEventListener("mousemove",this.onMouseMove.bind(this)),this.canvas.addEventListener("mouseup",this.onMouseUp.bind(this)),this.canvas.addEventListener("dblclick",this.onDoubleClick.bind(this)),this.canvas.addEventListener("wheel",this.onMouseWheel.bind(this),{passive:!1}),this.canvas.addEventListener("contextmenu",t=>t.preventDefault()),document.getElementById("btn-new")?.addEventListener("click",()=>this.newMap()),document.getElementById("btn-save")?.addEventListener("click",()=>this.saveMap()),document.getElementById("btn-load")?.addEventListener("click",()=>this.loadMap()),document.getElementById("btn-export")?.addEventListener("click",()=>this.exportBox2D()),document.getElementById("btn-toggle-panel")?.addEventListener("click",()=>this.togglePanel()),document.getElementById("btn-preview")?.addEventListener("click",()=>this.togglePreview()),document.getElementById("btn-preview-play")?.addEventListener("click",()=>this.resumePreview()),document.getElementById("btn-preview-pause")?.addEventListener("click",()=>this.pausePreview()),document.getElementById("btn-preview-reset")?.addEventListener("click",()=>this.resetPreview()),document.getElementById("btn-preview-exit")?.addEventListener("click",()=>this.exitPreview()),document.getElementById("btn-undo")?.addEventListener("click",()=>this.undo()),document.getElementById("btn-redo")?.addEventListener("click",()=>this.redo()),document.getElementById("file-input")?.addEventListener("change",t=>{const i=t.target.files?.[0];i&&this.loadFromFile(i)}),document.addEventListener("keydown",t=>{if(this.isPreviewMode){t.key==="Escape"&&(t.preventDefault(),this.exitPreview());return}t.key==="Delete"&&this.selectedObject?this.deleteSelected():t.ctrlKey&&t.key==="z"?(t.preventDefault(),this.undo()):t.ctrlKey&&t.key==="y"?(t.preventDefault(),this.redo()):t.key===" "&&(t.preventDefault(),this.togglePreview())}),this.setupViewControls()}setupViewControls(){const e=document.getElementById("canvas-width-slider"),t=document.getElementById("canvas-width-value"),i=document.getElementById("canvas-height-slider"),s=document.getElementById("canvas-height-value"),o=document.getElementById("ppm-slider"),r=document.getElementById("ppm-value"),n=document.getElementById("origin-x-slider"),a=document.getElementById("origin-x-value"),l=document.getElementById("origin-y-slider"),c=document.getElementById("origin-y-value"),d=document.getElementById("btn-reset-view");e?.addEventListener("input",p=>{const h=parseInt(p.target.value);this.canvas.width=h,t&&(t.textContent=h.toString()),this.render(),this.updateStatus("画布宽度已调整为 "+h+"px")}),i?.addEventListener("input",p=>{const h=parseInt(p.target.value);this.canvas.height=h,s&&(s.textContent=h.toString()),this.render(),this.updateStatus("画布高度已调整为 "+h+"px")}),o?.addEventListener("input",p=>{const h=parseInt(p.target.value);g=h,r&&(r.textContent=h.toString()),this.render()}),n?.addEventListener("input",p=>{const h=parseFloat(p.target.value);b=h,a&&(a.textContent=h.toFixed(2)),this.render()}),l?.addEventListener("input",p=>{const h=parseFloat(p.target.value);m=h,c&&(c.textContent=h.toFixed(2)),this.render()}),d?.addEventListener("click",()=>{this.canvas.width=1e3,this.canvas.height=700,e&&(e.value="1000"),t&&(t.textContent="1000"),i&&(i.value="700"),s&&(s.textContent="700"),g=20,b=0,m=0,o&&(o.value="20"),r&&(r.textContent="20"),n&&(n.value="0"),a&&(a.textContent="0.00"),l&&(l.value="0"),c&&(c.textContent="0.00"),this.render(),this.updateStatus("视图已重置")})}togglePanel(){const e=document.getElementById("property-panel");if(e){e.classList.toggle("collapsed");const t=e.classList.contains("collapsed");this.updateStatus(t?"属性面板已收起":"属性面板已展开")}}setTool(e){this.currentTool=e,this.drawingObject=null,this.polygonVertices=[],this.jointBodyA=null,this.jointAnchorA=null,document.querySelectorAll(".tool-btn").forEach(t=>{t.classList.remove("active")}),document.querySelector(`[data-tool="${e}"]`)?.classList.add("active"),this.updateStatus(`工具: ${e}`),this.render()}getMousePos(e){const t=this.canvas.getBoundingClientRect(),i=this.canvas.width/t.width,s=this.canvas.height/t.height,o=(e.clientX-t.left)*i,r=(e.clientY-t.top)*s;return A(o,r,this.canvas.width,this.canvas.height)}onMouseDown(e){if(this.isPreviewMode&&e.button!==1)return;if(e.button===1){e.preventDefault(),this.isPanning=!0,this.panStartOriginX=b,this.panStartOriginY=m,this.panStartMouseX=e.clientX,this.panStartMouseY=e.clientY,this.canvas.style.cursor="grabbing";return}if(e.button!==0)return;const t=this.getMousePos(e);switch(this.currentTool){case"select":this.handleSelectMouseDown(t);break;case"rect":case"circle":this.handleShapeMouseDown(t);break;case"polygon":this.handlePolygonMouseDown(t);break;case"revoluteJoint":this.handleJointMouseDown(t);break;case"delete":this.handleDeleteMouseDown(t);break}}onMouseMove(e){if(this.isPanning){const i=e.clientX-this.panStartMouseX,s=e.clientY-this.panStartMouseY;b=this.panStartOriginX-i/g,m=this.panStartOriginY+s/g,this.updateViewControlsUI(),this.render();return}if(this.isPreviewMode){const i=this.getMousePos(e);this.updateStatus("物理预览模式",`坐标: (${i.x.toFixed(2)}m, ${i.y.toFixed(2)}m)`,"按 ESC 或点击退出");return}const t=this.getMousePos(e);if(this.mousePos=t,this.isEditingVertices?this.updateStatus("顶点编辑模式 (拖动顶点修改 | 双击/点击空白处退出)",`坐标: (${t.x.toFixed(2)}m, ${t.y.toFixed(2)}m)`):this.updateStatus(`工具: ${this.currentTool}`,`坐标: (${t.x.toFixed(2)}m, ${t.y.toFixed(2)}m)`),this.draggedVertexIndex>=0&&this.editingBody?.vertices){const i=this.editingBody,s=Math.cos(-i.angle),o=Math.sin(-i.angle),r=t.x-i.position.x,n=t.y-i.position.y,a=r*s-n*o,l=r*o+n*s;i.vertices[this.draggedVertexIndex].x=a,i.vertices[this.draggedVertexIndex].y=l,this.render();return}if(this.draggingAnchor){const{joint:i,isAnchorA:s}=this.draggingAnchor,o=this.objects.find(r=>r.id===(s?i.bodyAId:i.bodyBId));if(o){const r=I(t.x,t.y,o.position.x,o.position.y,o.angle);s?(i.anchorALocal.x=r.x,i.anchorALocal.y=r.y):(i.anchorBLocal.x=r.x,i.anchorBLocal.y=r.y)}this.render();return}if(this.currentTool==="select"&&this.isDragging&&this.selectedObject&&this.dragStartPos){const i=t.x-this.dragStartPos.x,s=t.y-this.dragStartPos.y;this.selectedObject.type==="body"&&(this.selectedObject.position.x+=i,this.selectedObject.position.y+=s),this.dragStartPos=t,this.render()}this.drawingObject&&(this.currentTool==="rect"||this.currentTool==="circle")&&(this.updateDrawingShape(t),this.render()),(this.currentTool!=="select"||this.polygonVertices.length>0)&&this.render()}onMouseUp(e){if(this.isPanning){this.isPanning=!1,this.canvas.style.cursor=this.isPreviewMode?"default":"crosshair";return}if(!this.isPreviewMode){if((this.currentTool==="rect"||this.currentTool==="circle")&&this.drawingObject&&this.finalizeDrawingShape(),this.draggingAnchor&&this.anchorStartPos){const{joint:t,isAnchorA:i}=this.draggingAnchor,s=i?t.anchorALocal:t.anchorBLocal,o=i?"anchorALocal":"anchorBLocal",r=this.anchorStartPos,n={x:s.x,y:s.y};if(r.x!==n.x||r.y!==n.y){const a=new w(t,o,r,n,()=>{this.render(),this.updatePropertyPanel()});this.commandHistory.execute(a),this.updateUndoRedoButtons()}this.draggingAnchor=null,this.anchorStartPos=null,this.updatePropertyPanel()}if(this.draggedVertexIndex>=0&&this.vertexDragStart&&this.editingBody?.vertices){const t=this.editingBody,i=JSON.parse(JSON.stringify(t.vertices));i[this.draggedVertexIndex].x=this.vertexDragStart.x,i[this.draggedVertexIndex].y=this.vertexDragStart.y;const s=JSON.parse(JSON.stringify(t.vertices));if(Math.abs(s[this.draggedVertexIndex].x-i[this.draggedVertexIndex].x)>.01||Math.abs(s[this.draggedVertexIndex].y-i[this.draggedVertexIndex].y)>.01){const r=new w(t,"vertices",i,s,()=>{this.render(),this.updatePropertyPanel()});this.commandHistory.execute(r),this.updateUndoRedoButtons()}this.draggedVertexIndex=-1,this.vertexDragStart=null,this.updatePropertyPanel()}if(this.isDragging&&this.moveStartPos&&this.selectedObject&&this.selectedObject.type==="body"){const t=this.selectedObject,i=this.moveStartPos.x,s=this.moveStartPos.y,o=t.position.x,r=t.position.y;if(i!==o||s!==r){const n=new k(t,i,s,o,r,()=>this.render());this.commandHistory.execute(n),this.updateUndoRedoButtons()}}this.isDragging=!1,this.dragStartPos=null,this.moveStartPos=null}}onDoubleClick(e){if(!this.isPreviewMode){if(this.currentTool==="polygon"&&this.polygonVertices.length>=3){this.polygonVertices.pop(),this.finalizePolygon();return}if(this.currentTool==="select"){const t=this.canvas.getBoundingClientRect(),i=this.canvas.width/t.width,s=this.canvas.height/t.height,o=(e.clientX-t.left)*i,r=(e.clientY-t.top)*s,n=A(o,r,this.canvas.width,this.canvas.height);if(this.isEditingVertices){this.exitVertexEditMode();return}const a=this.hitTest(n.x,n.y);if(a&&a.type==="body"){const l=a;l.shapeType==="polygon"&&l.vertices&&this.enterVertexEditMode(l)}}}}onMouseWheel(e){e.preventDefault();const t=this.canvas.getBoundingClientRect(),i=e.clientX-t.left,s=e.clientY-t.top,o=this.canvas.width/t.width,r=this.canvas.height/t.height,n=i*o,a=s*r,l=A(n,a,this.canvas.width,this.canvas.height),c=e.deltaY>0?-1:1,d=g;if(g=Math.max(5,Math.min(50,g+c)),g===d)return;const p=A(n,a,this.canvas.width,this.canvas.height);b+=l.x-p.x,m+=l.y-p.y,this.updateViewControlsUI(),this.isPreviewMode?this.rebuildBox2DWorldWithNewScale():this.render()}updateViewControlsUI(){const e=document.getElementById("ppm-slider"),t=document.getElementById("ppm-value");e&&(e.value=g.toString()),t&&(t.textContent=g.toString());const i=document.getElementById("origin-x-slider"),s=document.getElementById("origin-x-value");if(i){const n=Math.max(-20,Math.min(20,b));i.value=n.toString()}s&&(s.textContent=b.toFixed(2));const o=document.getElementById("origin-y-slider"),r=document.getElementById("origin-y-value");if(o){const n=Math.max(-20,Math.min(20,m));o.value=n.toString()}r&&(r.textContent=m.toFixed(2))}handleSelectMouseDown(e){if(this.isEditingVertices&&this.editingBody){const s=this.hitTestVertex(this.editingBody,e.x,e.y);if(s>=0){this.draggedVertexIndex=s;const o=this.editingBody.vertices[s];this.vertexDragStart={x:o.x,y:o.y},console.log(`开始拖动顶点 ${s}`);return}this.exitVertexEditMode()}const t=this.hitTestAnchor(e.x,e.y);if(t){this.draggingAnchor=t,this.selectedObject=t.joint;const s=t.isAnchorA?t.joint.anchorALocal:t.joint.anchorBLocal;this.anchorStartPos={x:s.x,y:s.y},this.updatePropertyPanel(),this.render();return}const i=this.hitTest(e.x,e.y);this.selectedObject=i,i&&i.type==="body"&&(this.isDragging=!0,this.dragStartPos=e,this.moveStartPos={x:i.position.x,y:i.position.y}),this.updatePropertyPanel(),this.render()}handleShapeMouseDown(e){this.currentTool==="rect"?this.drawingObject=this.createBody("box",e.x,e.y,1,1):this.drawingObject=this.createBody("circle",e.x,e.y,.5),this.dragStartPos=e}handlePolygonMouseDown(e){this.polygonVertices.push({x:e.x,y:e.y}),this.render()}handleJointMouseDown(e){const t=this.hitTest(e.x,e.y);if(!t||t.type!=="body"){this.updateStatus("关节工具","","请点击一个刚体作为第一个连接点");return}if(!this.jointBodyA)this.jointBodyA=t,this.jointAnchorA=e,this.updateStatus("关节工具","",`已选择物体 ${this.jointBodyA.id.substring(0,8)}..., 请选择第二个刚体`);else{const i=t;if(this.jointBodyA.id===i.id){this.updateStatus("关节工具","","❌ 不能连接同一个物体！请选择另一个刚体");return}this.createJoint(this.jointBodyA,i,this.jointAnchorA,e),this.jointBodyA=null,this.jointAnchorA=null,this.updateStatus("关节工具","","✓ 关节已创建！（默认允许碰撞，可在属性面板修改）")}}handleDeleteMouseDown(e){const t=this.hitTest(e.x,e.y);t&&(this.objects=this.objects.filter(i=>i.id!==t.id),this.selectedObject=null,this.updatePropertyPanel(),this.render())}updateDrawingShape(e){if(!this.drawingObject||!this.dragStartPos)return;const t=e.x-this.dragStartPos.x,i=e.y-this.dragStartPos.y;this.drawingObject.shapeType==="box"?(this.drawingObject.width=Math.max(.5,Math.abs(t)),this.drawingObject.height=Math.max(.5,Math.abs(i)),this.drawingObject.position.x=this.dragStartPos.x+t/2,this.drawingObject.position.y=this.dragStartPos.y+i/2):this.drawingObject.shapeType==="circle"&&(this.drawingObject.radius=Math.max(.25,Math.max(Math.abs(t),Math.abs(i))/2))}finalizeDrawingShape(){if(this.drawingObject){const e=this.drawingObject,t=new O(this.objects,e,()=>this.render());this.commandHistory.execute(t),this.drawingObject=null,this.dragStartPos=null,this.updateUndoRedoButtons(),this.render()}}finalizePolygon(){if(this.polygonVertices.length>=3){const e=this.polygonVertices.reduce((r,n)=>r+n.x,0)/this.polygonVertices.length,t=this.polygonVertices.reduce((r,n)=>r+n.y,0)/this.polygonVertices.length,i=this.polygonVertices.map(r=>({x:r.x-e,y:r.y-t})),s=this.createBody("polygon",e,t);s.vertices=i;const o=new O(this.objects,s,()=>this.render());this.commandHistory.execute(o),this.polygonVertices=[],this.updateUndoRedoButtons(),this.render()}}createBody(e,t,i,s,o){return{id:E("body_"),type:"body",shapeType:e,position:{x:t,y:i},angle:0,width:s,height:o,radius:e==="circle"?20:void 0,bodyType:"dynamic",density:1,friction:.3,restitution:.5,linearDamping:0,angularDamping:0,gravityScale:1,fixedRotation:!1}}createJoint(e,t,i,s){const o=I(i.x,i.y,e.position.x,e.position.y,e.angle),r=I(s.x,s.y,t.position.x,t.position.y,t.angle),n={id:E("joint_"),type:"joint",jointType:"revolute",bodyAId:e.id,bodyBId:t.id,anchorALocal:o,anchorBLocal:r};n.enableLimit=!1,n.lowerAngle=-Math.PI/2,n.upperAngle=Math.PI/2,n.enableMotor=!1,n.motorSpeed=0,n.maxMotorTorque=1e3,n.collideConnected=!0;const a=new O(this.objects,n,()=>this.render());this.commandHistory.execute(a),this.updateUndoRedoButtons(),this.render()}hitTest(e,t){const i=10/g;for(let s=this.objects.length-1;s>=0;s--){const o=this.objects[s];if(o.type==="joint"){const r=o,n=this.objects.find(l=>l.id===r.bodyAId),a=this.objects.find(l=>l.id===r.bodyBId);if(n&&a){const l=P(r.anchorALocal.x,r.anchorALocal.y,n.position.x,n.position.y,n.angle),c=P(r.anchorBLocal.x,r.anchorBLocal.y,a.position.x,a.position.y,a.angle);if(S(e,t,l.x,l.y)<=i||S(e,t,c.x,c.y)<=i)return r}}}for(let s=this.objects.length-1;s>=0;s--){const o=this.objects[s];if(o.type==="body"){if(o.shapeType==="box"&&o.width&&o.height){if(C(e,t,o.position.x,o.position.y,o.width,o.height,o.angle))return o}else if(o.shapeType==="circle"&&o.radius){if(Y(e,t,o.position.x,o.position.y,o.radius))return o}else if(o.shapeType==="polygon"&&o.vertices&&o.vertices.length>=3&&X(e,t,o.vertices,o.position.x,o.position.y,o.angle))return o}}return null}hitTestAnchor(e,t){const i=10/g;for(let s=this.objects.length-1;s>=0;s--){const o=this.objects[s];if(o.type==="joint"){const r=o,n=this.objects.find(l=>l.id===r.bodyAId),a=this.objects.find(l=>l.id===r.bodyBId);if(n&&a){const l=P(r.anchorALocal.x,r.anchorALocal.y,n.position.x,n.position.y,n.angle),c=P(r.anchorBLocal.x,r.anchorBLocal.y,a.position.x,a.position.y,a.angle);if(S(e,t,l.x,l.y)<=i)return{joint:r,isAnchorA:!0};if(S(e,t,c.x,c.y)<=i)return{joint:r,isAnchorA:!1}}}}return null}enterVertexEditMode(e){this.isEditingVertices=!0,this.editingBody=e,this.selectedObject=e,console.log(`进入顶点编辑模式: ${e.id}`),this.updateStatus("顶点编辑模式","拖动顶点修改位置","双击或点击空白处退出"),this.render()}exitVertexEditMode(){this.isEditingVertices=!1,this.editingBody=null,this.draggedVertexIndex=-1,this.vertexDragStart=null,console.log("退出顶点编辑模式"),this.updateStatus("退出顶点编辑模式"),this.render()}hitTestVertex(e,t,i){if(!e.vertices)return-1;const s=.3;for(let o=0;o<e.vertices.length;o++){const r=e.vertices[o],n=Math.cos(e.angle),a=Math.sin(e.angle),l=e.position.x+r.x*n-r.y*a,c=e.position.y+r.x*a+r.y*n;if(Math.sqrt((t-l)**2+(i-c)**2)<=s)return o}return-1}deleteSelected(){if(this.selectedObject){const e=this.selectedObject,t=new F(this.objects,e,()=>{this.selectedObject=null,this.updatePropertyPanel(),this.render()});this.commandHistory.execute(t),this.updateUndoRedoButtons()}}render(){const e=this.ctx,t=this.canvas.width,i=this.canvas.height;e.clearRect(0,0,t,i),e.strokeStyle="#e0e0e0",e.lineWidth=1;const s=b-t/2/g,o=b+t/2/g,r=m,n=m+i/g;for(let l=Math.floor(s/j)*j;l<=o;l+=j){const c=v(l,0,t,i);e.beginPath(),e.moveTo(c.x,0),e.lineTo(c.x,i),e.stroke()}for(let l=Math.floor(r/j)*j;l<=n;l+=j){const c=v(0,l,t,i);e.beginPath(),e.moveTo(0,c.y),e.lineTo(t,c.y),e.stroke()}e.fillStyle="#666",e.font="10px monospace";for(let l=Math.ceil(s);l<=Math.floor(o);l++)if(l%5===0){const c=v(l,r,t,i);e.fillText(`${l}m`,c.x+2,i-5)}for(let l=Math.ceil(r);l<=Math.floor(n);l++)if(l%5===0){const c=v(s,l,t,i);e.fillText(`${l}m`,5,c.y-2)}const a=v(0,0,t,i);if(e.strokeStyle="#ff0000",e.lineWidth=2,e.beginPath(),e.moveTo(a.x-10,a.y),e.lineTo(a.x+10,a.y),e.moveTo(a.x,a.y-10),e.lineTo(a.x,a.y+10),e.stroke(),e.fillStyle="#ff0000",e.font="11px monospace",e.fillText("(0,0)",a.x+12,a.y-5),this.objects.forEach(l=>{l.type==="body"?this.renderBody(l):this.renderJoint(l)}),this.drawingObject&&this.renderBody(this.drawingObject),this.polygonVertices.length>0){e.strokeStyle="#3498db",e.fillStyle="#3498db",e.lineWidth=2,e.beginPath();const l=v(this.polygonVertices[0].x,this.polygonVertices[0].y,t,i);e.moveTo(l.x,l.y);for(let c=1;c<this.polygonVertices.length;c++){const d=v(this.polygonVertices[c].x,this.polygonVertices[c].y,t,i);e.lineTo(d.x,d.y)}if(e.stroke(),this.polygonVertices.forEach(c=>{const d=v(c.x,c.y,t,i);e.beginPath(),e.arc(d.x,d.y,5,0,Math.PI*2),e.fill()}),this.polygonVertices.length>0){e.setLineDash([5,5]),e.strokeStyle="#3498db",e.lineWidth=1,e.beginPath();const c=this.polygonVertices[this.polygonVertices.length-1],d=v(c.x,c.y,t,i),p=v(this.mousePos.x,this.mousePos.y,t,i);e.moveTo(d.x,d.y),e.lineTo(p.x,p.y),e.stroke(),e.setLineDash([])}}if(this.currentTool!=="select"&&!this.isDragging){const l=v(this.mousePos.x,this.mousePos.y,t,i);e.strokeStyle="#999",e.lineWidth=1,e.setLineDash([3,3]),e.beginPath(),e.moveTo(l.x,0),e.lineTo(l.x,i),e.stroke(),e.beginPath(),e.moveTo(0,l.y),e.lineTo(t,l.y),e.stroke(),e.setLineDash([]),e.fillStyle="#e74c3c",e.beginPath(),e.arc(l.x,l.y,4,0,Math.PI*2),e.fill(),e.fillStyle="#333",e.font="11px monospace",e.fillText(`(${this.mousePos.x.toFixed(2)}m, ${this.mousePos.y.toFixed(2)}m)`,l.x+10,l.y-10)}if(this.currentTool==="revoluteJoint"&&this.jointBodyA&&this.jointAnchorA){const l=this.canvas.width,c=this.canvas.height;e.save(),e.strokeStyle="#f39c12",e.lineWidth=3,e.setLineDash([5,5]);const d=v(this.jointBodyA.position.x,this.jointBodyA.position.y,l,c);if(this.jointBodyA.shapeType==="box"&&this.jointBodyA.width&&this.jointBodyA.height){const f=this.jointBodyA.width*g,x=this.jointBodyA.height*g;e.strokeRect(d.x-f/2-5,d.y-x/2-5,f+10,x+10)}else if(this.jointBodyA.shapeType==="circle"&&this.jointBodyA.radius){const f=this.jointBodyA.radius*g;e.beginPath(),e.arc(d.x,d.y,f+5,0,Math.PI*2),e.stroke()}e.setLineDash([]);const p=v(this.jointAnchorA.x,this.jointAnchorA.y,l,c);e.fillStyle="#f39c12",e.beginPath(),e.arc(p.x,p.y,6,0,Math.PI*2),e.fill();const h=v(this.mousePos.x,this.mousePos.y,l,c);e.strokeStyle="#f39c12",e.lineWidth=2,e.setLineDash([5,5]),e.beginPath(),e.moveTo(p.x,p.y),e.lineTo(h.x,h.y),e.stroke(),e.restore()}}renderBody(e){const t=this.ctx,i=this.canvas.width,s=this.canvas.height,o=this.selectedObject===e,r=v(e.position.x,e.position.y,i,s);if(t.save(),t.translate(r.x,r.y),t.rotate(-e.angle),t.fillStyle=_[e.bodyType],t.strokeStyle=o?$:"#2c3e50",t.lineWidth=o?3:2,e.shapeType==="box"&&e.width&&e.height){const n=B(e.width),a=B(e.height);t.fillRect(-n/2,-a/2,n,a),t.strokeRect(-n/2,-a/2,n,a),t.strokeStyle=o?"#fff":"#34495e",t.lineWidth=2,t.beginPath(),t.moveTo(0,0),t.lineTo(n/2,0),t.stroke()}else if(e.shapeType==="circle"&&e.radius){const n=B(e.radius);t.beginPath(),t.arc(0,0,n,0,Math.PI*2),t.fill(),t.stroke(),t.strokeStyle=o?"#fff":"#34495e",t.lineWidth=2,t.beginPath(),t.moveTo(0,0),t.lineTo(n,0),t.stroke()}else if(e.shapeType==="polygon"&&e.vertices&&e.vertices.length>0){t.beginPath();const n=e.vertices[0],a={x:B(n.x),y:-B(n.y)};t.moveTo(a.x,a.y);for(let l=1;l<e.vertices.length;l++){const c=e.vertices[l],d={x:B(c.x),y:-B(c.y)};t.lineTo(d.x,d.y)}t.closePath(),t.fill(),t.stroke()}if(t.fillStyle=o?"#fff":"#2c3e50",t.beginPath(),t.arc(0,0,3,0,Math.PI*2),t.fill(),t.restore(),this.isEditingVertices&&this.editingBody===e&&e.vertices)for(let n=0;n<e.vertices.length;n++){const a=e.vertices[n],l=Math.cos(e.angle),c=Math.sin(e.angle),d=e.position.x+a.x*l-a.y*c,p=e.position.y+a.x*c+a.y*l,h=v(d,p,i,s);t.save(),t.fillStyle=this.draggedVertexIndex===n?"#e74c3c":"#3498db",t.strokeStyle="#fff",t.lineWidth=2,t.beginPath(),t.arc(h.x,h.y,6,0,Math.PI*2),t.fill(),t.stroke(),t.fillStyle="#fff",t.font="bold 10px monospace",t.textAlign="center",t.textBaseline="middle",t.fillText(n.toString(),h.x,h.y),t.restore()}o&&(t.fillStyle="#333",t.font="10px monospace",t.fillText(e.id.substring(0,12)+"...",r.x+10,r.y-10))}renderJoint(e){const t=this.ctx,i=this.canvas.width,s=this.canvas.height,o=this.selectedObject===e,r=this.objects.find(x=>x.id===e.bodyAId),n=this.objects.find(x=>x.id===e.bodyBId);if(!r||!n)return;const a=P(e.anchorALocal.x,e.anchorALocal.y,r.position.x,r.position.y,r.angle),l=P(e.anchorBLocal.x,e.anchorBLocal.y,n.position.x,n.position.y,n.angle),c=v(a.x,a.y,i,s),d=v(l.x,l.y,i,s);t.strokeStyle=o?$:"#e67e22",t.lineWidth=o?3:2,t.beginPath(),t.moveTo(c.x,c.y),t.lineTo(d.x,d.y),t.stroke();const p=o?7:5;t.fillStyle="#e74c3c";const h=this.draggingAnchor&&this.draggingAnchor.joint===e&&this.draggingAnchor.isAnchorA,f=this.draggingAnchor&&this.draggingAnchor.joint===e&&!this.draggingAnchor.isAnchorA;if(t.beginPath(),t.arc(c.x,c.y,h?10:p,0,Math.PI*2),t.fill(),(o||h)&&(t.strokeStyle=h?"#00ff00":"#fff",t.lineWidth=h?3:2,t.stroke()),t.fillStyle="#9b59b6",t.beginPath(),t.arc(d.x,d.y,f?10:p,0,Math.PI*2),t.fill(),(o||f)&&(t.strokeStyle=f?"#00ff00":"#fff",t.lineWidth=f?3:2,t.stroke()),o){t.fillStyle="#333",t.font="10px monospace";const x=(c.x+d.x)/2,L=(c.y+d.y)/2;t.fillText("Revolute Joint",x+5,L-5)}}updatePropertyPanel(){const e=document.getElementById("property-content");if(e){if(!this.selectedObject){e.innerHTML='<p class="placeholder">请选择一个对象以编辑其属性</p>';return}this.selectedObject.type==="body"?(e.innerHTML=this.generateBodyProperties(this.selectedObject),this.bindBodyPropertyEvents()):(e.innerHTML=this.generateJointProperties(this.selectedObject),this.bindJointPropertyEvents())}}generateBodyProperties(e){let t="";return e.shapeType==="box"&&e.width!==void 0&&e.height!==void 0?t=`
        <div class="property-group">
          <div class="property-group-title">矩形尺寸 (单位：米)</div>
          <div class="property-field">
            <label>宽度 (Width)</label>
            <input type="number" id="prop-width" class="body-prop" value="${e.width.toFixed(2)}" step="0.1" min="0.1">
          </div>
          <div class="property-field">
            <label>高度 (Height)</label>
            <input type="number" id="prop-height" class="body-prop" value="${e.height.toFixed(2)}" step="0.1" min="0.1">
          </div>
        </div>
      `:e.shapeType==="circle"&&e.radius!==void 0?t=`
        <div class="property-group">
          <div class="property-group-title">圆形尺寸 (单位：米)</div>
          <div class="property-field">
            <label>半径 (Radius)</label>
            <input type="number" id="prop-radius" class="body-prop" value="${e.radius.toFixed(2)}" step="0.1" min="0.1">
          </div>
        </div>
      `:e.shapeType==="polygon"&&e.vertices&&e.vertices.length>0&&(t=`
        <div class="property-group">
          <div class="property-group-title">多边形顶点 (单位：米)</div>
          ${e.vertices.map((s,o)=>`
        <div class="vertex-field">
          <label>顶点 ${o+1}</label>
          <div class="input-group">
            <input type="number" id="prop-vertex-${o}-x" class="body-prop vertex-input" 
                   value="${s.x.toFixed(2)}" step="0.1" placeholder="X">
            <input type="number" id="prop-vertex-${o}-y" class="body-prop vertex-input" 
                   value="${s.y.toFixed(2)}" step="0.1" placeholder="Y">
          </div>
        </div>
      `).join("")}
          <div class="hint">提示：顶点坐标相对于物体中心</div>
        </div>
      `),`
      <div class="object-info">
        <div class="object-info-row">
          <span class="object-info-label">ID:</span>
          <span class="object-info-value">${e.id}</span>
        </div>
        <div class="object-info-row">
          <span class="object-info-label">类型:</span>
          <span class="object-info-value">刚体 (${e.shapeType})</span>
        </div>
      </div>

      <div class="property-group">
        <div class="property-group-title">位置坐标 (单位：米)</div>
        <div class="property-field">
          <label>X 坐标</label>
          <input type="number" id="prop-position-x" class="body-prop" value="${e.position.x.toFixed(2)}" step="0.1">
        </div>
        <div class="property-field">
          <label>Y 坐标</label>
          <input type="number" id="prop-position-y" class="body-prop" value="${e.position.y.toFixed(2)}" step="0.1">
        </div>
        <div class="property-field">
          <label>旋转角度 (度)</label>
          <input type="number" id="prop-angle" class="body-prop" value="${(e.angle*180/Math.PI).toFixed(2)}" step="1">
        </div>
      </div>

      ${t}

      <div class="property-group">
        <div class="property-group-title">刚体类型</div>
        <div class="property-field">
          <select id="prop-bodyType" class="body-prop">
            <option value="static" ${e.bodyType==="static"?"selected":""}>Static (静态)</option>
            <option value="dynamic" ${e.bodyType==="dynamic"?"selected":""}>Dynamic (动态)</option>
            <option value="kinematic" ${e.bodyType==="kinematic"?"selected":""}>Kinematic (运动学)</option>
          </select>
        </div>
      </div>

      <div class="property-group">
        <div class="property-group-title">物理属性</div>
        <div class="property-field">
          <label>密度 (Density)</label>
          <input type="number" id="prop-density" class="body-prop" value="${e.density}" step="0.1" min="0">
        </div>
        <div class="property-field">
          <label>摩擦力 (Friction)</label>
          <input type="number" id="prop-friction" class="body-prop" value="${e.friction}" step="0.1" min="0" max="1">
        </div>
        <div class="property-field">
          <label>弹性 (Restitution)</label>
          <input type="number" id="prop-restitution" class="body-prop" value="${e.restitution}" step="0.1" min="0" max="1">
        </div>
      </div>

      <div class="property-group">
        <div class="property-group-title">阻尼</div>
        <div class="property-field">
          <label>线性阻尼</label>
          <input type="number" id="prop-linearDamping" class="body-prop" value="${e.linearDamping}" step="0.1" min="0">
        </div>
        <div class="property-field">
          <label>角阻尼</label>
          <input type="number" id="prop-angularDamping" class="body-prop" value="${e.angularDamping}" step="0.1" min="0">
        </div>
      </div>

      <div class="property-group">
        <div class="property-group-title">其他</div>
        <div class="property-field">
          <label>重力缩放</label>
          <input type="number" id="prop-gravityScale" class="body-prop" value="${e.gravityScale}" step="0.1">
        </div>
        <div class="property-field property-field-inline">
          <input type="checkbox" id="prop-fixedRotation" class="body-prop" ${e.fixedRotation?"checked":""}>
          <label>固定旋转</label>
        </div>
      </div>

      <div class="btn-group">
        <button id="btn-delete-obj" class="btn">删除对象</button>
      </div>
    `}generateJointProperties(e){const t=this.objects.find(s=>s.id===e.bodyAId),i=this.objects.find(s=>s.id===e.bodyBId);return`
      <div class="object-info">
        <div class="object-info-row">
          <span class="object-info-label">ID:</span>
          <span class="object-info-value">${e.id}</span>
        </div>
        <div class="object-info-row">
          <span class="object-info-label">类型:</span>
          <span class="object-info-value">旋转关节</span>
        </div>
        <div class="object-info-row">
          <span class="object-info-label">Body A:</span>
          <span class="object-info-value">${t?t.id.substring(0,12)+"...":"N/A"}</span>
        </div>
        <div class="object-info-row">
          <span class="object-info-label">Body B:</span>
          <span class="object-info-value">${i?i.id.substring(0,12)+"...":"N/A"}</span>
        </div>
      </div>

      <div class="property-group">
        <div class="property-group-title">锚点位置（局部坐标，单位：米）</div>
        <div class="property-field">
          <label>锚点 A - X (m)</label>
          <input type="number" id="prop-anchorALocalX" class="joint-prop" value="${e.anchorALocal.x.toFixed(2)}" step="0.1">
        </div>
        <div class="property-field">
          <label>锚点 A - Y (m)</label>
          <input type="number" id="prop-anchorALocalY" class="joint-prop" value="${e.anchorALocal.y.toFixed(2)}" step="0.1">
        </div>
        <div class="property-field">
          <label>锚点 B - X (m)</label>
          <input type="number" id="prop-anchorBLocalX" class="joint-prop" value="${e.anchorBLocal.x.toFixed(2)}" step="0.1">
        </div>
        <div class="property-field">
          <label>锚点 B - Y (m)</label>
          <input type="number" id="prop-anchorBLocalY" class="joint-prop" value="${e.anchorBLocal.y.toFixed(2)}" step="0.1">
        </div>
      </div>

      <div class="property-group">
        <div class="property-group-title">旋转关节属性</div>
        <div class="property-field property-field-inline">
          <input type="checkbox" id="prop-enableLimit" class="joint-prop" ${e.enableLimit?"checked":""}>
          <label>启用角度限制</label>
        </div>
        <div class="property-field">
          <label>下限角度 (度)</label>
          <input type="number" id="prop-lowerAngle" class="joint-prop" value="${Math.round((e.lowerAngle||0)*180/Math.PI)}" step="5">
        </div>
        <div class="property-field">
          <label>上限角度 (度)</label>
          <input type="number" id="prop-upperAngle" class="joint-prop" value="${Math.round((e.upperAngle||0)*180/Math.PI)}" step="5">
        </div>
      </div>

      <div class="property-group">
        <div class="property-group-title">马达控制</div>
        <div class="property-field property-field-inline">
          <input type="checkbox" id="prop-enableMotor" class="joint-prop" ${e.enableMotor?"checked":""}>
          <label>启用马达</label>
        </div>
        <div class="property-field">
          <label>马达速度 (rad/s)</label>
          <input type="number" id="prop-motorSpeed" class="joint-prop" value="${(e.motorSpeed||0).toFixed(2)}" step="0.1">
          <div class="hint">正值：逆时针旋转 | 负值：顺时针旋转</div>
        </div>
        <div class="property-field">
          <label>最大扭矩</label>
          <input type="number" id="prop-maxMotorTorque" class="joint-prop" value="${e.maxMotorTorque||1e3}" step="100" min="0">
          <div class="hint">扭矩越大，马达力量越强</div>
        </div>
      </div>

      <div class="property-group">
        <div class="property-group-title">碰撞设置</div>
        <div class="property-field property-field-inline">
          <input type="checkbox" id="prop-collideConnected" class="joint-prop" ${e.collideConnected?"checked":""}>
          <label>允许连接物体碰撞</label>
        </div>
        <div class="hint">勾选：连接的物体会发生碰撞（如人体关节）<br>不勾选：连接的物体穿透彼此（适合特殊效果）</div>
      </div>

      <div class="btn-group">
        <button id="btn-delete-obj" class="btn">删除对象</button>
      </div>
    `}bindBodyPropertyEvents(){const e=(o,r,n=!1)=>{const a=document.getElementById(o);!a||!this.selectedObject||this.selectedObject.type!=="body"||a.addEventListener(n?"change":"input",()=>{if(this.selectedObject&&this.selectedObject.type==="body"){const l=this.selectedObject,c=l[r],d=n?a.checked:o==="prop-bodyType"?a.value:parseFloat(a.value);if(c!==d){const p=new w(l,r,c,d,()=>{this.render(),this.updatePropertyPanel()});this.commandHistory.execute(p),this.updateUndoRedoButtons()}}})},t=document.getElementById("prop-position-x");t&&this.selectedObject&&this.selectedObject.type==="body"&&t.addEventListener("input",()=>{if(this.selectedObject&&this.selectedObject.type==="body"){const o=this.selectedObject,r=o.position.x,n=parseFloat(t.value);if(r!==n){const a=new w(o,"position.x",r,n,()=>{o.position.x=n,this.render(),this.updatePropertyPanel()});this.commandHistory.execute(a),this.updateUndoRedoButtons()}}});const i=document.getElementById("prop-position-y");i&&this.selectedObject&&this.selectedObject.type==="body"&&i.addEventListener("input",()=>{if(this.selectedObject&&this.selectedObject.type==="body"){const o=this.selectedObject,r=o.position.y,n=parseFloat(i.value);if(r!==n){const a=new w(o,"position.y",r,n,()=>{o.position.y=n,this.render(),this.updatePropertyPanel()});this.commandHistory.execute(a),this.updateUndoRedoButtons()}}});const s=document.getElementById("prop-angle");if(s&&this.selectedObject&&this.selectedObject.type==="body"&&s.addEventListener("input",()=>{if(this.selectedObject&&this.selectedObject.type==="body"){const o=this.selectedObject,r=o.angle,n=parseFloat(s.value)*Math.PI/180;if(r!==n){const a=new w(o,"angle",r,n,()=>{this.render(),this.updatePropertyPanel()});this.commandHistory.execute(a),this.updateUndoRedoButtons()}}}),e("prop-width","width"),e("prop-height","height"),e("prop-radius","radius"),this.selectedObject&&this.selectedObject.type==="body"){const o=this.selectedObject;o.shapeType==="polygon"&&o.vertices&&o.vertices.forEach((r,n)=>{const a=document.getElementById(`prop-vertex-${n}-x`);a&&a.addEventListener("input",()=>{const c=parseFloat(a.value),d=JSON.parse(JSON.stringify(o.vertices)),p=JSON.parse(JSON.stringify(o.vertices));p[n].x=c;const h=new w(o,"vertices",d,p,()=>{this.render(),this.updatePropertyPanel()});this.commandHistory.execute(h),this.updateUndoRedoButtons()});const l=document.getElementById(`prop-vertex-${n}-y`);l&&l.addEventListener("input",()=>{const c=parseFloat(l.value),d=JSON.parse(JSON.stringify(o.vertices)),p=JSON.parse(JSON.stringify(o.vertices));p[n].y=c;const h=new w(o,"vertices",d,p,()=>{this.render(),this.updatePropertyPanel()});this.commandHistory.execute(h),this.updateUndoRedoButtons()})})}e("prop-bodyType","bodyType"),e("prop-density","density"),e("prop-friction","friction"),e("prop-restitution","restitution"),e("prop-linearDamping","linearDamping"),e("prop-angularDamping","angularDamping"),e("prop-gravityScale","gravityScale"),e("prop-fixedRotation","fixedRotation",!0),document.getElementById("btn-delete-obj")?.addEventListener("click",()=>this.deleteSelected())}bindJointPropertyEvents(){const e=(i,s,o=!1,r=!1)=>{const n=document.getElementById(i);!n||!this.selectedObject||this.selectedObject.type!=="joint"||n.addEventListener(o?"change":"input",()=>{if(this.selectedObject&&this.selectedObject.type==="joint"){const a=this.selectedObject,l=a[s];let c=o?n.checked:parseFloat(n.value);if(r&&(c=c*Math.PI/180),l!==c){const d=new w(a,s,l,c,()=>{this.render(),this.updatePropertyPanel()});this.commandHistory.execute(d),this.updateUndoRedoButtons()}}})},t=(i,s,o)=>{const r=document.getElementById(i);!r||!this.selectedObject||this.selectedObject.type!=="joint"||r.addEventListener("input",()=>{if(this.selectedObject&&this.selectedObject.type==="joint"){const n=this.selectedObject,a=s?n.anchorALocal:n.anchorBLocal,l=s?"anchorALocal":"anchorBLocal",c={x:a.x,y:a.y},d={x:a.x,y:a.y};if(o?d.x=parseFloat(r.value):d.y=parseFloat(r.value),c.x!==d.x||c.y!==d.y){const p=new w(n,l,c,d,()=>{this.render(),this.updatePropertyPanel()});this.commandHistory.execute(p),this.updateUndoRedoButtons()}}})};t("prop-anchorALocalX",!0,!0),t("prop-anchorALocalY",!0,!1),t("prop-anchorBLocalX",!1,!0),t("prop-anchorBLocalY",!1,!1),e("prop-enableLimit","enableLimit",!0),e("prop-lowerAngle","lowerAngle",!1,!0),e("prop-upperAngle","upperAngle",!1,!0),e("prop-enableMotor","enableMotor",!0),e("prop-motorSpeed","motorSpeed",!1),e("prop-maxMotorTorque","maxMotorTorque",!1),e("prop-collideConnected","collideConnected",!0),document.getElementById("btn-delete-obj")?.addEventListener("click",()=>this.deleteSelected())}updateUndoRedoButtons(){const e=document.getElementById("btn-undo"),t=document.getElementById("btn-redo");e&&(e.disabled=!this.commandHistory.canUndo()),t&&(t.disabled=!this.commandHistory.canRedo())}undo(){this.commandHistory.undo(),this.updateUndoRedoButtons(),this.updateStatus("撤销操作","","已撤销")}redo(){this.commandHistory.redo(),this.updateUndoRedoButtons(),this.updateStatus("重做操作","","已重做")}updateStatus(...e){const t=document.getElementById("status-tool"),i=document.getElementById("status-objects"),s=document.getElementById("status-coords"),o=document.getElementById("status-message");e[0]&&t&&(t.textContent=e[0]),i&&(i.textContent=`对象: ${this.objects.length}`),e[1]&&s&&(s.textContent=e[1]),e[2]&&o&&(o.textContent=e[2])}newMap(){confirm("确定要新建地图吗？当前未保存的内容将丢失。")&&(this.objects=[],this.selectedObject=null,this.updatePropertyPanel(),this.render())}saveMap(){if(this.objects.length===0){alert("没有可保存的对象");return}const e=JSON.stringify(this.objects,null,2);T(e,"map.json"),alert("地图保存成功！")}loadMap(){document.getElementById("file-input")?.click()}async loadFromFile(e){try{const t=await e.text(),i=JSON.parse(t);if(i.world_settings&&i.bodies&&i.joints){alert(`检测到 Box2D 导出格式，但目前不支持从导出文件导入。
请使用"保存地图"生成的 map.json 文件。`);return}if(!Array.isArray(i))throw new Error("文件格式错误：数据必须是数组格式");for(const s of i)if(!s.id||!s.type)throw new Error("文件格式错误：对象缺少必要字段（id 或 type）");this.objects=i,this.selectedObject=null,this.commandHistory=new M,this.updateUndoRedoButtons(),this.updatePropertyPanel(),this.render(),alert("文件加载成功！")}catch(t){console.error("加载文件错误:",t),alert("加载文件失败: "+(t instanceof Error?t.message:String(t)))}}exportBox2D(){const e={world_settings:{gravity:[0,-10],allow_sleeping:!0,auto_clear_forces:!0},bodies:this.objects.filter(i=>i.type==="body").map(i=>this.bodyToBox2D(i)),joints:this.objects.filter(i=>i.type==="joint").map(i=>this.jointToBox2D(i))},t=JSON.stringify(e,null,2);T(t,"box2d_export.json")}bodyToBox2D(e){const t=[];return e.shapeType==="box"&&e.width&&e.height?t.push({shape:{type:"box",params:{width:e.width,height:e.height}},fixture_def:{density:e.density,friction:e.friction,restitution:e.restitution,is_sensor:!1,filter_category_bits:1,filter_mask_bits:65535,filter_group_index:0}}):e.shapeType==="circle"&&e.radius?t.push({shape:{type:"circle",params:{radius:e.radius}},fixture_def:{density:e.density,friction:e.friction,restitution:e.restitution,is_sensor:!1,filter_category_bits:1,filter_mask_bits:65535,filter_group_index:0}}):e.shapeType==="polygon"&&e.vertices&&t.push({shape:{type:"polygon",params:{vertices:e.vertices.map(i=>[i.x,i.y])}},fixture_def:{density:e.density,friction:e.friction,restitution:e.restitution,is_sensor:!1,filter_category_bits:1,filter_mask_bits:65535,filter_group_index:0}}),{id:e.id,body_def:{type:e.bodyType,position:[e.position.x,e.position.y],angle:e.angle,linear_velocity:[0,0],angular_velocity:0,linear_damping:e.linearDamping,angular_damping:e.angularDamping,allow_sleep:!0,awake:!0,fixed_rotation:e.fixedRotation,bullet:!1,gravity_scale:e.gravityScale},fixtures:t,visual_properties:{},user_data:{}}}jointToBox2D(e){const t=this.objects.find(o=>o.id===e.bodyAId),i=this.objects.find(o=>o.id===e.bodyBId);return!t||!i?null:{...{id:e.id,joint_type:"revolute",body_a:e.bodyAId,body_b:e.bodyBId,visual_properties:{},user_data:{}},joint_def:{local_anchor_a:[e.anchorALocal.x,e.anchorALocal.y],local_anchor_b:[e.anchorBLocal.x,e.anchorBLocal.y],reference_angle:i.angle-t.angle,enable_limit:e.enableLimit||!1,lower_angle:e.lowerAngle||-Math.PI/2,upper_angle:e.upperAngle||Math.PI/2,enable_motor:!1,motor_speed:0,max_motor_torque:0,collide_connected:!1}}}disableToolbar(e){document.querySelectorAll(".tool-btn").forEach(i=>{i.disabled=e,e?i.classList.add("disabled"):i.classList.remove("disabled")}),["btn-new","btn-save","btn-load","btn-export","btn-undo","btn-redo"].forEach(i=>{const s=document.getElementById(i);s&&(s.disabled=e)})}togglePreview(){this.isPreviewMode?this.exitPreview():this.startPreview()}startPreview(){if(typeof window.b2World>"u"){alert(`Box2D 物理引擎未加载！

请确认：
1. public/box2d-js/lib/box2d.js 文件存在
2. 刷新页面重新加载
3. 查看控制台是否有加载错误`),console.error("Box2D 加载检查失败 - b2World 未定义"),console.log("可用的全局对象:",Object.keys(window).filter(e=>e.includes("b2")));return}if(this.objects.length===0){alert("场景中没有物体！请先创建一些物体。");return}console.log("开始物理预览..."),console.log("Box2D 版本: Flash 移植版"),this.isPreviewMode=!0,this.previewPaused=!1,this.previewOriginalState=[];for(const e of this.objects)if(e.type==="body"){const t=e;this.previewOriginalState.push({id:t.id,position:{x:t.position.x,y:t.position.y},angle:t.angle})}this.canvas.style.cursor="default",document.getElementById("preview-controls").style.display="flex",document.getElementById("property-panel").style.display="none",this.disableToolbar(!0),document.getElementById("btn-preview-play").style.display="none",document.getElementById("btn-preview-pause").style.display="inline-block",this.previewPPM=g,this.previewOriginOffsetX=b,this.previewOriginOffsetY=m,console.log(`保存坐标系快照: PPM=${this.previewPPM}, OriginX=${this.previewOriginOffsetX.toFixed(2)}, OriginY=${this.previewOriginOffsetY.toFixed(2)}`),this.initBox2DWorld(),this.startPreviewAnimation(),this.updateStatus("物理预览模式",`物体数: ${this.objects.length}`,"按 ESC 或点击退出")}initBox2DWorld(){console.log("=== 初始化 Box2D 世界 ==="),console.log(`场景对象总数: ${this.objects.length}`),this.box2dBodies.clear(),this.box2dJoints.clear(),console.log("已清空旧的 Box2D 映射");const e=window.b2AABB,t=window.b2World,i=window.b2Vec2,s=new e;s.minVertex.Set(-1e3,-1e3),s.maxVertex.Set(1e3,1e3);const o=new i(0,300),r=!0;this.box2dWorld=new t(s,o,r),console.log("Box2D 世界已创建");const n=this.objects.filter(h=>h.type==="body"),a=this.objects.filter(h=>h.type==="joint");console.log(`准备创建: ${n.length} 个物体, ${a.length} 个关节`);let l=0,c=0;for(const h of this.objects)if(h.type==="body"){const f=h,x=this.createBox2DBody(f);x?(this.box2dBodies.set(f.id,x),l++):c++}console.log(`物体创建完成: ${l} 成功, ${c} 失败`),console.log(`当前 box2dBodies Map 大小: ${this.box2dBodies.size}`),console.log("box2dBodies 的 keys:",Array.from(this.box2dBodies.keys()));let d=0,p=0;for(const h of this.objects)if(h.type==="joint"){const f=h,x=this.createBox2DJoint(f);x?(this.box2dJoints.set(f.id,x),d++):p++}console.log(`关节创建完成: ${d} 成功, ${p} 失败`),console.log("=== Box2D 世界初始化完成 ==="),console.log(`最终结果: ${this.box2dBodies.size} 个物体, ${this.box2dJoints.size} 个关节`)}createBox2DBody(e){console.log(`创建 Box2D Body: id=${e.id}, type=${e.bodyType}, shape=${e.shapeType}`);const t=window.b2BodyDef,i=window.b2BoxDef,s=window.b2CircleDef,o=window.b2PolyDef,r=new t;let n=null;if(e.shapeType==="box"&&e.width&&e.height){n=new i;const d=e.width*this.previewPPM/2,p=e.height*this.previewPPM/2;n.extents.Set(d,p),console.log(`  - 矩形: 半宽=${d.toFixed(2)}px, 半高=${p.toFixed(2)}px [使用保存的 PPM=${this.previewPPM}]`)}else if(e.shapeType==="circle"&&e.radius)n=new s,n.radius=e.radius*this.previewPPM,console.log(`  - 圆形: 半径=${n.radius.toFixed(2)}px [使用保存的 PPM=${this.previewPPM}]`);else if(e.shapeType==="polygon"&&e.vertices&&e.vertices.length>=3){n=new o,n.vertexCount=e.vertices.length,console.log(`  - 准备创建多边形: ${e.vertices.length} 个顶点`);for(let d=0;d<e.vertices.length;d++){const p=e.vertices[d],h=p.x*this.previewPPM,f=-p.y*this.previewPPM;n.vertices[d].Set(h,f),console.log(`    顶点[${d}]: 局部(${p.x.toFixed(2)}, ${p.y.toFixed(2)}) -> Box2D(${h.toFixed(2)}, ${f.toFixed(2)})`)}console.log(`  - 多边形顶点已设置 [使用保存的 PPM=${this.previewPPM}]`)}if(!n)return console.error(`❌ 无法创建形状: ${e.shapeType}, width=${e.width}, height=${e.height}, radius=${e.radius}`),null;n.density=e.bodyType==="static"?0:e.density,n.friction=e.friction,n.restitution=e.restitution,console.log(`  - 物理属性: density=${n.density}, friction=${n.friction}, restitution=${n.restitution}`),r.AddShape(n);const a=(e.position.x-this.previewOriginOffsetX)*this.previewPPM+this.canvas.width/2,l=-(e.position.y-this.previewOriginOffsetY)*this.previewPPM+this.canvas.height/2;r.position.Set(a,l),console.log(`  - 位置: 世界(${e.position.x.toFixed(2)}, ${e.position.y.toFixed(2)}) -> 画布(${a.toFixed(0)}, ${l.toFixed(0)}) [使用保存的坐标系]`),r.rotation=-e.angle,console.log(`  - 角度: ${(e.angle*180/Math.PI).toFixed(1)}° -> Box2D ${(r.rotation*180/Math.PI).toFixed(1)}°`);const c=this.box2dWorld.CreateBody(r);return c?console.log(`✅ Body ${e.id} 创建成功`):(console.error(`❌ Body ${e.id} 创建失败！CreateBody 返回 null`),console.error(`  - 详细信息: type=${e.bodyType}, shape=${e.shapeType}`),console.error("  - bodyDef:",r),console.error("  - shapeDef:",n)),c}createBox2DJoint(e){console.log(`创建 Box2D Joint: id=${e.id}, type=${e.jointType}, bodyA=${e.bodyAId}, bodyB=${e.bodyBId}`);const t=window.b2RevoluteJointDef,i=this.box2dBodies.get(e.bodyAId),s=this.box2dBodies.get(e.bodyBId);if(!i)return console.error(`❌ 关节 ${e.id} 的 bodyA (${e.bodyAId}) 未找到！`),console.log("  - 可用的 bodies:",Array.from(this.box2dBodies.keys())),null;if(!s)return console.error(`❌ 关节 ${e.id} 的 bodyB (${e.bodyBId}) 未找到！`),console.log("  - 可用的 bodies:",Array.from(this.box2dBodies.keys())),null;if(console.log("  - bodyA 和 bodyB 都已找到"),e.jointType==="revolute"){const o=this.objects.find(d=>d.id===e.bodyAId),r=this.objects.find(d=>d.id===e.bodyBId);if(!o||!r)return console.error(`❌ 关节 ${e.id} 对应的 Body 对象未找到！bodyAObj=${!!o}, bodyBObj=${!!r}`),null;console.log(`  - Body 对象: bodyA pos=(${o.position.x.toFixed(2)}, ${o.position.y.toFixed(2)}), bodyB pos=(${r.position.x.toFixed(2)}, ${r.position.y.toFixed(2)})`);const n=new t;n.body1=i,n.body2=s;const a=P(e.anchorALocal.x,e.anchorALocal.y,o.position.x,o.position.y,o.angle),l=(a.x-this.previewOriginOffsetX)*this.previewPPM+this.canvas.width/2,c=-(a.y-this.previewOriginOffsetY)*this.previewPPM+this.canvas.height/2;n.anchorPoint.Set(l,c),console.log(`  - 锚点: 局部(${e.anchorALocal.x.toFixed(2)}, ${e.anchorALocal.y.toFixed(2)}) -> 世界(${a.x.toFixed(2)}, ${a.y.toFixed(2)}) -> 画布(${l.toFixed(0)}, ${c.toFixed(0)}) [使用保存的坐标系]`),e.enableLimit&&(n.enableLimit=!0,n.lowerAngle=e.lowerAngle||-Math.PI/2,n.upperAngle=e.upperAngle||Math.PI/2,console.log(`  - 角度限制: ${(n.lowerAngle*180/Math.PI).toFixed(0)}° 到 ${(n.upperAngle*180/Math.PI).toFixed(0)}°`)),e.enableMotor&&(n.enableMotor=!0,n.motorSpeed=e.motorSpeed||0,n.motorTorque=e.maxMotorTorque||1e3,console.log(`  - 马达: 速度=${n.motorSpeed.toFixed(2)} rad/s, 扭矩=${n.motorTorque}`)),n.collideConnected=e.collideConnected||!1,console.log(`  - 碰撞连接: ${n.collideConnected}`);try{const d=this.box2dWorld.CreateJoint(n);return d?(console.log(`✅ Joint ${e.id} 创建成功`),d):(console.error(`❌ Joint ${e.id} 创建失败！CreateJoint 返回 null`),null)}catch(d){return console.error(`❌ Joint ${e.id} 创建异常:`,d),null}}return console.warn(`⚠️ 不支持的关节类型: ${e.jointType}`),null}startPreviewAnimation(){const e=()=>{this.isPreviewMode&&(this.previewPaused||(this.box2dWorld.Step(.016666666666666666,10),this.syncBox2DToObjects()),this.render(),this.previewAnimationId=requestAnimationFrame(e))};e()}syncBox2DToObjects(){for(const[e,t]of this.box2dBodies.entries()){const i=this.objects.find(s=>s.id===e);if(i){const s=t.m_position,o=t.m_rotation,r=s.x,n=s.y,a=(r-this.canvas.width/2)/this.previewPPM+this.previewOriginOffsetX,l=-(n-this.canvas.height/2)/this.previewPPM+this.previewOriginOffsetY;i.position.x=a,i.position.y=l,i.angle=-o}}}pausePreview(){this.previewPaused=!0,document.getElementById("btn-preview-play").style.display="inline-block",document.getElementById("btn-preview-pause").style.display="none"}resumePreview(){this.previewPaused=!1,document.getElementById("btn-preview-play").style.display="none",document.getElementById("btn-preview-pause").style.display="inline-block"}rebuildBox2DWorldWithNewScale(){console.log("=== 缩放变化，重建 Box2D 世界 ==="),console.log(`新的 PPM: ${g}, 新的 ORIGIN_OFFSET: (${b.toFixed(2)}, ${m.toFixed(2)})`);const e=this.previewPaused;this.previewPaused=!0;const t=[];for(const[i,s]of this.box2dBodies.entries()){const o=this.objects.find(r=>r.id===i);if(o){const r={id:o.id,position:{x:o.position.x,y:o.position.y},angle:o.angle};o.bodyType==="dynamic"&&s.m_linearVelocity&&(r.linearVelocity={x:s.m_linearVelocity.x,y:s.m_linearVelocity.y},r.angularVelocity=s.m_angularVelocity||0),t.push(r)}}console.log(`已保存 ${t.length} 个物体的当前状态`),this.box2dWorld&&(this.box2dWorld=null),this.previewPPM=g,this.previewOriginOffsetX=b,this.previewOriginOffsetY=m,console.log(`更新坐标系快照: PPM=${this.previewPPM}, OriginX=${this.previewOriginOffsetX.toFixed(2)}, OriginY=${this.previewOriginOffsetY.toFixed(2)}`),this.initBox2DWorld();for(const i of t){const s=this.box2dBodies.get(i.id);s&&i.linearVelocity&&(s.m_linearVelocity.Set(i.linearVelocity.x,i.linearVelocity.y),s.m_angularVelocity=i.angularVelocity||0,console.log(`恢复物体 ${i.id} 的速度: (${i.linearVelocity.x.toFixed(2)}, ${i.linearVelocity.y.toFixed(2)}), 角速度: ${i.angularVelocity}`))}this.previewPaused=e,this.render(),console.log("=== Box2D 世界重建完成 ===")}resetPreview(){console.log("=== 重置物理预览 ==="),this.previewAnimationId&&(cancelAnimationFrame(this.previewAnimationId),this.previewAnimationId=null,console.log("动画循环已停止")),this.box2dWorld&&(console.log("销毁旧的 Box2D 世界"),this.box2dWorld=null),console.log("恢复物体到原始状态...");let e=0;for(const t of this.previewOriginalState){const i=this.objects.find(s=>s.id===t.id);i&&(i.position.x=t.position.x,i.position.y=t.position.y,i.angle=t.angle,e++)}console.log(`已恢复 ${e} 个物体的状态`),this.initBox2DWorld(),this.previewPaused=!1,document.getElementById("btn-preview-play").style.display="none",document.getElementById("btn-preview-pause").style.display="inline-block",this.startPreviewAnimation(),console.log("=== 重置完成 ==="),this.updateStatus("物理预览已重置")}exitPreview(){console.log("退出物理预览"),this.isPreviewMode=!1,this.previewAnimationId&&(cancelAnimationFrame(this.previewAnimationId),this.previewAnimationId=null),this.box2dWorld&&(this.box2dWorld=null),this.box2dBodies.clear(),this.box2dJoints.clear();for(const e of this.previewOriginalState){const t=this.objects.find(i=>i.id===e.id);t&&(t.position.x=e.position.x,t.position.y=e.position.y,t.angle=e.angle)}this.previewOriginalState=[],document.getElementById("preview-controls").style.display="none",document.getElementById("property-panel").style.display="flex",this.canvas.style.cursor="crosshair",this.disableToolbar(!1),document.getElementById("btn-preview-play").style.display="none",document.getElementById("btn-preview-pause").style.display="none",this.render(),this.updateStatus("已退出预览模式")}}window.addEventListener("DOMContentLoaded",()=>{new R("design-canvas")});
//# sourceMappingURL=main-BDI0Ueqd.js.map
